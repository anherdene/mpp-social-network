{
  "users": [
    {
      "id": 1,
      "username": "Byambaa",
      "firstname": "Byambadorj",
      "lastname": "Dulamsuren",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 2,
      "username": "Puujee",
      "firstname": "Purevdemberel",
      "lastname": "Byambatogtokh",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 3,
      "username": "Anhaa",
      "firstname": "Anherdene",
      "lastname": "Bold",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 4,
      "username": "Tulgaa",
      "firstname": "Tulga",
      "lastname": "Orosoo",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 5,
      "username": "Duuk",
      "firstname": "Dulguuntur",
      "lastname": "Enkh",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 6,
      "username": "Batja",
      "firstname": "Barjargal",
      "lastname": "Naran",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 7,
      "username": "Turuu",
      "firstname": "Turbat",
      "lastname": "Turbat",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 8,
      "username": "Ragchaa",
      "firstname": "Ragchaabazar",
      "lastname": "Bud",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 9,
      "username": "Baachka",
      "firstname": "Angarag",
      "lastname": "Batjargal",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 10,
      "username": "Bataa",
      "firstname": "Batbold",
      "lastname": "Bold",
      "password": "dGVzdA==",
      "gender": "male",
      "created_date": "2019-03-14T18:25:43.511Z"
    },
    {
      "id": 11,
      "username": "Haliunaa",
      "firstname": "Haliun",
      "lastname": "Bold",
      "password": "dGVzdA==",
      "gender": "female",
      "created_date": "2019-03-14T18:25:43.511Z"
    }
  ],
  "user_relations": [
    {
      "id": 1,
      "user_id": 1,
      "related_user_id": 2,
      "relation_type": 1
    },
    {
      "id": 1,
      "user_id": 1,
      "related_user_id": 3,
      "relation_type": 2
    },
    {
      "id": 2,
      "user_id": 2,
      "related_user_id": 4,
      "relation_type": 2
    },
    {
      "id": 3,
      "user_id": 3,
      "related_user_id": 5,
      "relation_type": 1
    },
    {
      "id": 4,
      "user_id": 4,
      "related_user_id": 6,
      "relation_type": 1
    },
    {
      "id": 5,
      "user_id": 5,
      "related_user_id": 7,
      "relation_type": 1
    },
    {
      "id": 6,
      "user_id": 6,
      "related_user_id": 8,
      "relation_type": 2
    },
    {
      "id": 7,
      "user_id": 7,
      "related_user_id": 9,
      "relation_type": 2
    },
    {
      "id": 8,
      "user_id": 8,
      "related_user_id": 10,
      "relation_type": 2
    },
    {
      "id": 9,
      "user_id": 9,
      "related_user_id": 1,
      "relation_type": 2
    },
    {
      "id": 10,
      "user_id": 10,
      "related_user_id": 2,
      "relation_type": 1
    }
  ],
  "relation_types": [
    {
      "id": 1,
      "type": "following"
    },
    {
      "id": 2,
      "type": "follows"
    }
  ],
  "posts": [
    {
      "id": 1,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 1
    },
    {
      "id": 2,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 1
    },
    {
      "id": 3,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 1
    },
    {
      "id": 4,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },
    {
      "id": 5,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },
    {
      "id": 6,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },
    {
      "id": 7,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },
    {
      "id": 8,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },
    {
      "id": 9,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },
    {
      "id": 10,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 1
    },


    {
      "id": 11,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 2
    },
    {
      "id": 12,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 2
    },
    {
      "id": 13,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 2
    },
    {
      "id": 14,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },

    {
      "id": 15,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },
    {
      "id": 16,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },
    {
      "id": 17,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },

    {
      "id": 18,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },
    {
      "id": 19,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },
    {
      "id": 20,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 2
    },
    {
      "id": 21,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },
    {
      "id": 22,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },
    {
      "id": 23,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },
    {
      "id": 24,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 3
    },
    {
      "id": 25,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 3
    },
    {
      "id": 26,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 3
    },
    {
      "id": 27,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },
    {
      "id": 28,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },
    {
      "id": 29,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },
    {
      "id": 30,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 3
    },

    {
      "id": 31,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 32,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 33,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 34,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 35,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 36,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 37,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 4
    },
    {
      "id": 38,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 4
    },
    {
      "id": 39,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 4
    },
    {
      "id": 40,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 4
    },
    {
      "id": 41,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },

    {
      "id": 42,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },
    {
      "id": 43,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },
    {
      "id": 44,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },
    {
      "id": 45,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },
    {
      "id": 46,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 5
    },
    {
      "id": 47,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 5
    },
    {
      "id": 48,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 5
    },
    {
      "id": 49,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },
    {
      "id": 50,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 5
    },
    {
      "id": 51,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 6
    },
    {
      "id": 52,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 6
    },
    {
      "id": 53,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 6
    },
    {
      "id": 54,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },
    {
      "id": 55,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },
    {
      "id": 56,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },
    {
      "id": 57,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },
    {
      "id": 58,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },
    {
      "id": 59,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },
    {
      "id": 60,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 6
    },


    {
      "id": 61,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 7
    },
    {
      "id": 62,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 7
    },
    {
      "id": 63,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 7
    },
    {
      "id": 64,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },

    {
      "id": 65,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },
    {
      "id": 66,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },
    {
      "id": 67,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },

    {
      "id": 68,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },
    {
      "id": 69,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },
    {
      "id": 70,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 7
    },
    {
      "id": 71,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },
    {
      "id": 72,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },
    {
      "id": 73,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },
    {
      "id": 74,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 8
    },
    {
      "id": 75,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 8
    },
    {
      "id": 76,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 8
    },
    {
      "id": 77,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },
    {
      "id": 78,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },
    {
      "id": 79,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },
    {
      "id": 80,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 8
    },

    {
      "id": 81,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 9
    },
    {
      "id": 82,
      "content": "Parallel computing is Purely functional programming simplifies parallel computing[5] since two purely functional parts of the evaluation never interact.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 9
    },
    {
      "id": 83,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 9
    },
    {
      "id": 84,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 9
    },
    {
      "id": 85,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 9
    },
    {
      "id": 86,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 9
    },
    {
      "id": 87,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 9
    },
    {
      "id": 88,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 9
    },
    {
      "id": 89,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 9
    },
    {
      "id": 90,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },
    {
      "id": 91,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },

    {
      "id": 92,
      "content": "Arrays can be replaced by map or random access list, which admits purely functional implementation, but the access and update time is logarithmic.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },
    {
      "id": 93,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },
    {
      "id": 94,
      "content": "The 1973 language ML was created by Robin Milner at the University of Edinburgh, and David Turner developed the language SASL at the University of St Andrews.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },
    {
      "id": 95,
      "content": "Meanwhile, the development of Scheme, a simple lexically scoped and (impurely) functional dialect of Lisp, as described in the influential Lambda Papers and the classic 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community..",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },
    {
      "id": 96,
      "content": "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
      "created_date": "2019-03-14T18:25:43.511Z",
      "user_id": 10
    },
    {
      "id": 97,
      "content": "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming. For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
      "created_date": "2019-03-15T18:25:43.511Z",
      "user_id": 10
    },
    {
      "id": 98,
      "content": "Lambda calculus provides a theoretical framework for describing functions and their evaluation. It is a mathematical abstraction rather than a programming language—but it forms the basis of almost all current functional programming languages.",
      "created_date": "2019-03-16T18:25:43.511Z",
      "user_id": 10
    },
    {
      "id": 99,
      "content": "Purely functional programming consists in ensuring that functions, inside the functional paradigm, will only depend on their arguments, regardless of any global or local state.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    },
    {
      "id": 100,
      "content": "Each evaluation strategy which ends on a purely functional programs returns the same result.",
      "created_date": "2019-03-16T18:55:43.511Z",
      "user_id": 10
    }
  ],
  "post_comments": [
      {
      "id": 1,
      "post_id": 1,
      "user_id": 1,
      "comment": "That is very insightful!",
      "created_date": "2019-03-14T19:25:43.511Z"
    },
    {
      "id": 2,
      "post_id": 1,
      "user_id": 2,
      "comment": "Thanks.",
      "created_date": "2019-03-14T19:35:43.511Z"
    }
  ],
  "post_reactions": [
    {
      "id": 1,
      "post_id": 1,
      "reaction_type": 1,
      "user_id": 2,
      "created_date": "2019-03-14T19:25:43.511Z"
    },
    {
      "id": 2,
      "post_id": 1,
      "reaction_type": 1,
      "user_id": 3,
      "created_date": "2019-03-14T19:25:43.511Z"
    },
    {
      "id": 3,
      "post_id": 2,
      "reaction_type": 1,
      "user_id": 2,
      "created_date": "2019-03-14T19:25:43.511Z"
    }
  ],
  "reaction_type": [
    {
      "id": 1,
      "type": 1,
      "reaction_name": "like",
      "reaction_icon": "fas fa-thumbs-up"
    },
    {
      "id": 2,
      "type": 2,
      "reaction_name": "dislike",
      "reaction_icon": "fas fa-thumbs-down"
    }
  ]
}